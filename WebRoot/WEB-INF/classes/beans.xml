<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 用于测试Spring的IOC -->
	<bean id="date" class="java.util.Date" />

	<!-- 注入CategoryAction类 -->
	<bean id="categoryAction" class="cn.it.shop.action.CategoryAction"
		scope="prototype">
		<property name="categoryService" ref="categoryService" /> <!-- 依赖的categoryService用上面和Hibernate整合时配置好的categoryService -->
	</bean>

	<!-- com.mchange.v2.c3p0.ComboPooledDataSource类在c3p0-0.9.5.1.jar包的com.mchange.v2.c3p0包中 -->
	<!-- hibernate与Spring的整合 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/shop?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="user" value="root" />
		<property name="password" value="root" />
	</bean>

	<!-- org.springframework.orm.hibernate4.LocalSessionFactoryBean类在spring-orm-4.2.4.RELEASE.jar包的org.springframework.orm.hibernate4包中 -->
	<!-- 配置sessionFactory用来产生一个session -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" /> <!-- 加载hibernate配置文件 -->
	</bean>

	<!-- org.springframework.orm.hibernate4.HibernateTransactionManager类spring-orm-4.2.4.RELEASE.jar包的org.springframework.orm.hibernate4包中 -->
	<!-- 配置事务管理器，用来管理sessionFactory的，这样所有的由sessionFactory产生的session将会有声明式的管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 配置advice 目的是指定哪些方法需要什么类型的事务模式 -->
	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" /> <!-- REQUIRED表示如果存在事务，则支持当前的事务，如果没有则创建一个新的事务 -->
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS" /> <!-- SUPPORTS表示如果存在事务，则支持当前的事务，如果没有就算了 -->
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- 配置哪些包的类要切入事务 -->
		<aop:pointcut id="pointcut"
			expression="execution(* cn.it.shop.service.impl.*.*(..))" />
		<aop:advisor advice-ref="advice" pointcut-ref="pointcut" /><!-- 
			连接了上面的advice和上面的pointcut -->
		<!-- aop:pointcut要写在aop:advisor上面，否则会报错 -->
	</aop:config>

	<!-- 泛型类是不能实例化的，所以要加lazy-init属性 -->
	<bean id="baseService" class="cn.it.shop.service.impl.BaseServiceImpl"
		lazy-init="true">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="categoryService" class="cn.it.shop.service.impl.CategoryServiceImpl"
		parent="baseService" />

	<bean id="accountService" class="cn.it.shop.service.impl.AccountServiceImpl"
		parent="baseService" />
</beans> 
